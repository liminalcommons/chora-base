{% if include_documentation_standard and include_github_actions -%}
name: Documentation Quality

on:
  pull_request:
    paths:
      - 'user-docs/**'
      - 'project-docs/**'
      - 'dev-docs/**'
      - 'DOCUMENTATION_STANDARD.md'
      - 'scripts/validate_docs.py'
      - 'scripts/generate_docs_map.py'
  push:
    branches:
      - main
      - develop
    paths:
      - 'user-docs/**'
      - 'project-docs/**'
      - 'dev-docs/**'

jobs:
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ python_version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      - name: Validate documentation
        run: |
          python scripts/validate_docs.py

      - name: Generate documentation map
        run: |
          python scripts/generate_docs_map.py

      - name: Check if DOCUMENTATION_MAP.md is up to date
        run: |
          if ! git diff --exit-code DOCUMENTATION_MAP.md; then
            echo "‚ùå DOCUMENTATION_MAP.md is out of date!"
            echo "Run 'python scripts/generate_docs_map.py' and commit the changes."
            exit 1
          fi
          echo "‚úÖ DOCUMENTATION_MAP.md is up to date"

{% if documentation_advanced_features -%}
  generate-metrics:
    name: Generate Documentation Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ python_version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      - name: Generate metrics
        run: |
          python scripts/docs_metrics.py

      - name: Upload metrics as artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-metrics
          path: DOCUMENTATION_METRICS.md
          retention-days: 30

      - name: Display metrics summary
        run: |
          if [ -f DOCUMENTATION_METRICS.md ]; then
            echo "üìä Documentation Metrics Generated:"
            head -n 30 DOCUMENTATION_METRICS.md
          fi
{%- endif %}

{% if include_tests and include_documentation_standard -%}
  test-docs-examples:
    name: Test Documentation Examples
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '{{ python_version }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install PyYAML

      - name: Extract tests from documentation
        run: |
          python scripts/extract_tests.py

      - name: Run extracted tests
        run: |
          if [ -f tests/integration/test_from_docs.py ]; then
            pytest tests/integration/test_from_docs.py -v
          else
            echo "No tests extracted from documentation (no files with test_extraction: true)"
          fi
{%- endif %}
{%- endif %}
